export type UnknownStruct<_T extends string> = unknown;
export type AnyNumber = number | bigint | string;
export type OmitSigner<T extends readonly string[]> = T extends readonly [
    '&signer' | 'signer',
    ...infer Rest
] ? Rest : T;
export type OmitInner<T extends string> = T extends `${infer TOuter}<${infer _TInner}>` ? `${TOuter}` : T;
//# sourceMappingURL=common.d.ts.map