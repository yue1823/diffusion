"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/weightedPoolMath.ts
var weightedPoolMath_exports = {};
__export(weightedPoolMath_exports, {
  calcInGivenOutWeighted: () => calcInGivenOutWeighted,
  calcOutGivenInWeighted: () => calcOutGivenInWeighted,
  calcPriceImpactPercentageWeighted: () => calcPriceImpactPercentageWeighted
});
module.exports = __toCommonJS(weightedPoolMath_exports);
function calcOutGivenInWeighted(bI, wI, bO, wO, aI, sF) {
  const denom = bI + aI * (1 - sF);
  return bO * (1 - Math.pow(bI / denom, wI / wO));
}
function calcInGivenOutWeighted(bI, wI, bO, wO, aO, sF) {
  return bI * (Math.pow(bO / (bO - aO), wO / wI) - 1) / (1 - sF);
}
function calcPriceImpactPercentageWeighted(exactAmountIn, exactAmountOut, balanceIn, balanceOut, weightIn, weightOut) {
  if (balanceOut - exactAmountOut < 1e-6) {
    return 100;
  }
  const oldPrice = balanceIn / balanceOut * weightOut / weightIn;
  balanceIn = balanceIn + exactAmountIn;
  balanceOut = balanceOut - exactAmountOut;
  const newPrice = balanceIn / balanceOut * weightOut / weightIn;
  return Math.abs(newPrice - oldPrice) / oldPrice * 100;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  calcInGivenOutWeighted,
  calcOutGivenInWeighted,
  calcPriceImpactPercentageWeighted
});
//# sourceMappingURL=weightedPoolMath.js.map